PHONY		:=	__build
__build:

src			:=	$(BUILD_SRC)/$(obj)

obj-y		:=
subdir-y	:=
subdir_objs	:=
extra-y		:=

PREPARE		:=

SUBDIR_ASFLAGS	:=
SUBDIR_CCFLAGS	:=
SUBDIR_INCDIRS	:=

EXTRA_AFLAGS	:=
EXTRA_CFLAGS	:=

ifneq ($(strip $(wildcard $(src)/Makefile)),)

include $(src)/Makefile

subdir-y	:=	$(patsubst %/,$(obj)/%,$(filter %/, $(obj-y)))
subdir-objs	:=	$(foreach f,$(subdir-y),$(f)/built-in.o)
cur-objs	:=	$(patsubst %,$(obj)/%,$(filter-out %/, $(obj-y)))
extra-y		:=	$(patsubst %,$(obj)/%,$(filter-out %/, $(extra-y)))

X_OBJS		:=	$(cur-objs) $(subdir-objs)

PHONY		+=	$(subdir-y)

else

X_SFILES	:=	$(wildcard $(src)/*.S)
X_CFILES	:=	$(wildcard $(src)/*.c)

X_OBJS		:=	$(X_SFILES:.S=.o) $(X_CFILES:.c=.o)
X_OBJS		:=	$(patsubst $(BUILD_SRC)/%,%,$(X_OBJS))

endif

X_DEPS		:=	$(patsubst %, $(obj)/%, $(X_OBJS:.o=.o.d))
X_DEPS		:=	$(wildcard $(X_DEPS))

X_TARGET	:=	$(obj)/built-in.o

# Create output directory
_dummy		:=	$(shell mkdir -p $(obj) $(dir $(cur-objs) $(extra-y)))

sinclude $(X_DEPS)

X_ASFLAGS	+=	$(X_SUBDIR_ASFLAGS)
X_CFLAGS	+=	$(X_SUBDIR_CCFLAGS)
X_INCDIRS	+=	$(X_SUBDIR_INCDIRS)

X_SUBDIR_ASFLAGS	:=	$(X_SUBDIR_ASFLAGS) $(SUBDIR_ASFLAGS)
X_SUBDIR_CCFLAGS	:=	$(X_SUBDIR_CCFLAGS) $(SUBDIR_CCFLAGS)
X_SUBDIR_INCDIRS	:=	$(X_SUBDIR_INCDIRS) $(SUBDIR_INCDIRS)

export X_SUBDIR_ASFLAGS X_SUBDIR_CCFLAGS X_SUBDIR_INCDIRS


__build : $(X_TARGET) $(extra-y) ;

$(sort $(subdir-objs)) : $(subdir-y)

$(subdir-y) :
	@echo $@
	@make -f $(BUILD_SRC)/Makefile.build obj=$@

$(X_OBJS) $(extra-y) : $(PREPARE)

$(X_TARGET) : $(X_OBJS)
	@echo [LD] $(obj)/built-in.o
ifneq ($(strip $(X_OBJS)),)
	@$(LD) -r -o $@ $^
else
	@$(RM) $@;$(AR) rcs -o $@
endif

$(obj)/%.o : $(src)/%.S
	@echo [AS] $(@:.o=.S)
	@$(AS) $(X_ASFLAGS) -MD -MP -MF $@.d $(X_INCDIRS) -c $< -o $@

$(obj)/%.o : $(src)/%.c
	@echo [CC] $(@:.o=.c)
	@$(CC) $(X_CFLAGS) -MD -MP -MF $@.d $(X_INCDIRS) -c $< -o $@

.PHONY : $(PHONY)